@using StockTrackingApp.Entities.Enums
@using StockTrackingApp.UI.Extantions
@using StockTrackingApp.UI.Areas.Admin.Models.OrderVMs
@model StockTrackingApp.UI.Areas.Admin.Models.OrderVMs.AdminOrderDetailsVM

@{
    ViewData["Title"] = "Details";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<section id="multiple-column-form">
    <div class="row match-height">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Sipariş Detayı</h4>
                    <div class="col-sm-12 d-flex justify-content-end">
                        <a data-bs-toggle="modal" data-bs-target="#orderUpdateModal" asp-route-id="@Model.Id" data-item-id="@Model.Id" class="btn btn-primary" data-kt-users-table-filter="delete_row">Düzenle</a>
                        <a href="javascript:void(0)" class="btn btn-danger" onclick="confirmDelete('@Url.Action("Delete", "Order", new { area = "Admin", id = Model.Id })')">Delete</a>
                        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                    </div>
                    <div id="modalContainer">
                        @await Html.PartialAsync("_OrderUpdateModal", new AdminOrderUpdateVM())
                        @await Html.PartialAsync("_OrderStatusUpdateModal")

                    </div>
                </div>
                <div class="card-content">
                    <div class="card-body">
                        <form class="form form-horizontal">
                            <div class="form-body">
                                <div class="row">

                                    <div class="col-md-4">
                                        <label> @Html.DisplayNameFor(model => model.CustomerId)</label>
                                    </div>
                                    <div class="col-md-8 form-group">
                                        <label> @Html.DisplayFor(model => model.CustomerId)</label>
                                    </div>
                                    <div class="col-md-4">
                                        <label> @Html.DisplayNameFor(model => model.DeliveryDate)</label>
                                    </div>
                                    <div class="col-md-8 form-group">
                                        <label> @Html.DisplayFor(model => model.DeliveryDate)</label>
                                    </div>

                                    <div class="col-md-4">
                                        <label> @Html.DisplayNameFor(model => model.Description)</label>
                                    </div>
                                    <div class="col-md-8 form-group">
                                        <label> @Html.DisplayFor(model => model.Description)</label>
                                    </div>

                                    <div class="col-md-4">
                                        <label> @Html.DisplayNameFor(model => model.OrderDate)</label>
                                    </div>
                                    <div class="col-md-8 form-group">
                                        <label> @Html.DisplayFor(model => model.OrderDate)</label>
                                    </div>

                                    <div class="col-md-4">
                                        <label> @Html.DisplayNameFor(model => model.OrderStatus)</label>
                                    </div>
                                    <div class="col-md-8 form-group d-flex align-items-center">
                                        <label class="me-3"> @Html.DisplayFor(model => model.OrderStatus)</label>

                                        <!-- Modal Açan Buton -->
                                        <button type="button" class="btn btn-warning"
                                                data-bs-toggle="modal"
                                                data-bs-target="#statusModal"
                                                data-id="@Model.Id"
                                                data-currentstatus="@Model.OrderStatus">
                                            Durum Değiştir
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>
<script>
    var customerDropdownUrl = '@Url.Action("GetCustomers", "Order", new { area = "Admin" })';
    var stockDropdownUrl = '@Url.Action("GetStocks", "Order", new { area = "Admin" })';
    var vatRatesHtml = `@Html.Raw(string.Join("", Enum.GetValues(typeof(VatRate)).Cast<VatRate>().Select(v => $"<option value=\"{(int)v}\">{v.GetDisplayName()}</option>")))`;
</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/AdminLayout/addedjs/Datetimeflatpickr/datetimeFlatpickr.js"></script>
<script src="~/AdminLayout/addedjs/Order/order.js"></script>
<script src="~/AdminLayout/addedjs/Order/orderUpdate.js"></script>

<script>
    $(document).ready(function () {
        $('#updateOrderModal').on('show.bs.modal', function (event) {
            let button = $(event.relatedTarget);
            let itemId = button.data('item-id');

            let modal = $(this);
            modal.find('input[name="Id"]').val(itemId);

        });
    });
</script>


<script>
    const modal = document.getElementById('statusModal');
    if (modal) {
        modal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const orderId = button.getAttribute('data-id');
            const currentStatus = button.getAttribute('data-currentstatus');

            const inputId = modal.querySelector('#orderId');
            const selectStatus = modal.querySelector('#newStatus');

            inputId.value = orderId;
            selectStatus.value = currentStatus;
        });
    }
</script>


<script>
    $(document).ready(function () {
        $("#saveOrderStatus").click(function () {
            var orderId = $("#orderId").val();
            var newStatus = $("#orderStatus").val();

            $.ajax({
                url: "/Admin/Order/UpdateStatus",
                type: "POST",
                data: { id: orderId, status: newStatus },
                success: function (response) {
                    if (response.success) {
                        alert("Sipariş durumu güncellendi.");
                        location.reload(); // Sayfayı yenile
                    } else {
                        alert("Güncelleme başarısız: " + response.message);
                    }
                },
                error: function () {
                    alert("Bir hata oluştu, lütfen tekrar deneyin.");
                }
            });
        });
    });
</script>

<script>
    function confirmDelete(url) {
        Swal.fire({
            title: 'Emin misiniz?',
            text: "Bu işlemi geri alamazsınız!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Evet, sil!',
            cancelButtonText: 'Vazgeç'
        }).then((result) => {
            if (result.isConfirmed) {
                // Fetch ile silme isteği
                fetch(url, {
                    method: 'POST', // Eğer GET kullanıyorsanız bunu GET yapın
                })
                .then(response => {
                    if (response.ok) {
                        Swal.fire(
                            'Silindi!',
                            'Sipariş başarıyla silindi.',
                            'success'
                        ).then(() => {
                            location.reload(); // Sayfayı yenileyin veya gerekli güncellemeleri yapın
                        });
                    } else {
                        Swal.fire(
                            'Hata!',
                            'Bir sorun oluştu, Sipariş silinemedi.',
                            'error'
                        );
                    }
                })
                .catch(error => {
                    console.error('Fetch error:', error);
                    Swal.fire(
                        'Hata!',
                        'Bir hata oluştu.',
                        'error'
                    );
                });
            }
        });
    }
</script>
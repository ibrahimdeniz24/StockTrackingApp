@using StockTrackingApp.UI.Areas.Admin.Models.ProductVMs
@using StockTrackingApp.Entities.Enums
@using X.PagedList
@using StockTrackingApp.UI.Extantions
@model IPagedList<StockTrackingApp.UI.Areas.Admin.Models.ProductVMs.AdminProductListVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    int row = 0;
}

<section class="section">
    <div class="row" id="table-hover-row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center ">
                    <!-- Product Create Butonu -->
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#productCreateModal">
                        Yeni Ürün Oluştur
                    </button>
                    <!-- Partial View Modal İçeriğini Yüklemek İçin Boş Modal Div -->
                    <div id="modalContainer">
                        @await Html.PartialAsync("_ProductCreateModal", new AdminProductCreateVM())
                        @await Html.PartialAsync("_ProductUpdateModal", new AdminProductUpdateVM())
                    </div>

                    <!-- Arama Formu -->
                    <form method="get" class="d-flex">
                        <input type="text" class="form-control w-auto me-2" name="searchTerm" value="@ViewBag.SearchTerm" placeholder="Ürün Adı ile Ara" />
                        <button type="submit" class="btn btn-secondary">Ara</button>
                    </form>
                </div>
                <div class="card-content">
                    <div class="card-body">
                        <!-- Table with outer spacing -->
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>ProductImage</th>
                                        <th>Name</th>
                                        <th>SKU</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        row++;
                                        <tr>
                                            <td>
                                                @row
                                            </td>
                                            <td class="text-bold-500">
                                                @if (item.ProductImage != null && item.ProductImage.Length > 0)
                                                {
                                                    <img src="@($"data:image/png;base64,{Convert.ToBase64String(item.ProductImage)}")" witdh="150px" height="150px" alt="Profile Picture" />
                                                }
                                                else
                                                {
                                                    <span>No Profile Picture</span> <!-- Alternatif içerik veya mesaj -->
                                                }
                                            </td>
                                            <td class="text-bold-500">
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td class="text-bold-500">
                                                @Html.DisplayFor(modelItem => item.SKU)
                                            </td>
                                            <td>
                                                <div class="btn-group dropend me-1 mb-1">

                                                    <button class="btn btn-light rounded-pill  dropdown-toggle" type="button"
                                                            id="dropdownMenuButton" data-bs-toggle="dropdown"
                                                            aria-haspopup="true" aria-expanded="false">
                                                        Seçenekler
                                                    </button>
                                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                        <a data-bs-toggle="modal" data-bs-target="#updateProductModal" asp-route-id="@item.Id" data-item-id="@item.Id" data-item-name="@item.Name" data-item-sku="@item.SKU" data-category-id="@item.CategoryId" class="dropdown-item" data-kt-users-table-filter="delete_row">Düzenle</a>
                                                        <a class="dropdown-item" href="@Url.Action("Details", "Product", new { id = item.Id })">Details</a>
                                                    </div>


                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <!-- Sayfalama (Pagination) -->
                            <nav aria-label="Page navigation example">
                                <ul class="pagination pagination-primary justify-content-end">
                                    @if (Model.HasPreviousPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Önceki</a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item disabled">
                                            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Önceki</a>
                                        </li>
                                    }

                                    @for (int i = 1; i <= Model.PageCount; i++)
                                    {
                                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                        </li>
                                    }

                                    @if (Model.HasNextPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Sonraki</a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item disabled">
                                            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Sonraki</a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script>
      var categoryUrl = "@Url.Action("GetCategories", "Product", new { area = "Admin" })";
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/AdminLayout/addedjs/Product/productCreate.js"></script>
<script src="~/AdminLayout/addedjs/Product/productUpdate.js"></script>






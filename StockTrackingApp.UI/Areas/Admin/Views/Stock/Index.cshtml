@using StockTrackingApp.UI.Areas.Admin.Models.StockVMs
@using StockTrackingApp.Entities.Enums
@using X.PagedList
@using StockTrackingApp.UI.Extantions
@model IPagedList<StockTrackingApp.UI.Areas.Admin.Models.StockVMs.AdminStockListVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    int row = 0;
}

<section class="section">
    <div class="row" id="table-hover-row">
        <div class="col-12">
            <div class="card">
                <div class="card-header  d-flex justify-content-between align-items-center">
                    <!-- Stock Create Butonu -->
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#stockCreateModal">
                        Yeni Stok Oluştur
                    </button>
                    <!-- Partial View Modal İçeriğini Yüklemek İçin Boş Modal Div -->
                    <div id="modalContainer">
                        @await Html.PartialAsync("_StockCreateModal", new AdminStockCreateVM())
                        @await Html.PartialAsync("_StockUpdateModal", new AdminStockUpdateVM())
                    </div>

                    <!-- Arama Formu -->
                    <form method="get" class="d-flex">
                        <input type="text" class="form-control w-auto me-2" name="searchTerm" value="@ViewBag.SearchTerm" placeholder="Müşteri Adı ile Ara" />
                        <button type="submit" class="btn btn-secondary">Ara</button>
                    </form>
                </div>
                <div class="card-content">
                    <div class="card-body">
                        <!-- Table with outer spacing -->
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>ProductImage</th>
                                        <th>SKU</th>
                                        <th>ProductName</th>
                                        <th>Quantity</th>
                                        <th>WareHouseName</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        row++;
                                        <tr>
                                            <td>
                                                @row
                                            </td>
                                            <td class="text-bold-500">
                                                @if (item.ProductImage != null && item.ProductImage.Length > 0)
                                                {
                                                    <img src="@($"data:image/png;base64,{Convert.ToBase64String(item.ProductImage)}")" witdh="150px" height="150px" alt="Profile Picture" />
                                                }
                                                else
                                                {
                                                    <span>No Profile Picture</span> <!-- Alternatif içerik veya mesaj -->
                                                }
                                            </td>
                                            <td class="text-bold-500">
                                                @Html.DisplayFor(modelItem => item.SKU)
                                            </td>
                                            <td class="text-bold-500">
                                                @Html.DisplayFor(modelItem => item.ProductName)
                                            </td>
                                            <td class="text-bold-500">
                                                @Html.DisplayFor(modelItem => item.Quantity)
                                            </td>
                                            <td class="text-bold-500">
                                                @Html.DisplayFor(modelItem => item.WareHouseName)
                                            </td>
                                            <td>
                                                <div class="btn-group dropend me-1 mb-1">

                                                    <button class="btn btn-light rounded-pill  dropdown-toggle" type="button"
                                                            id="dropdownMenuButton" data-bs-toggle="dropdown"
                                                            aria-haspopup="true" aria-expanded="false">
                                                        Seçenekler
                                                    </button>
                                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                        <a data-bs-toggle="modal" data-bs-target="#stockUpdateModal" asp-route-id="@item.Id" data-item-id="@item.Id" class="dropdown-item" data-kt-users-table-filter="delete_row">Düzenle</a>
                                                        <a class="dropdown-item" href="@Url.Action("Details", "Stock", new { id = item.Id })">Details</a>

                                                    </div>

                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <!-- Sayfalama (Pagination) -->
                        <nav aria-label="Page navigation example">
                            <ul class="pagination pagination-primary justify-content-end">
                                @if (Model.HasPreviousPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Önceki</a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item disabled">
                                        <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Önceki</a>
                                    </li>
                                }

                                @for (int i = 1; i <= Model.PageCount; i++)
                                {
                                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                    </li>
                                }

                                @if (Model.HasNextPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Sonraki</a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item disabled">
                                        <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Sonraki</a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script>
    var productUrl = "@Url.Action("GetProducts", "Stock", new { area = "Admin" })";
    var supplierUrl = "@Url.Action("GetSuppliers", "Stock", new { area = "Admin" })";
    var warehouseUrl = '/Admin/Stock/GetWarehouses';
</script>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/AdminLayout/addedjs/Stock/stock.js"></script>
<script src="~/AdminLayout/addedjs/Stock/stockUpdate.js"></script>




<script>
    $(document).ready(function () {
        $('#stockCreateModal').on('show.bs.modal', function () {
            $.getJSON('/Admin/Stock/GetWarehouses', function (data) {
                var dropdown = $('#warehouseDropdown');
                dropdown.empty();
                dropdown.append('<option value="">Depo Seçin</option>');

                // Eğer JSON'daki "name" property yerine başka bir isim kullanılmışsa, burayı güncelle!
                $.each(data, function (index, supplier) {
                    dropdown.append($('<option></option>').attr('value', supplier.id).text(supplier.name));
                });
            });
        });
    });
</script>



